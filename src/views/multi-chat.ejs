<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Multi-Chat</title>
    <link rel="stylesheet" href="/styles.css">
    <script src="/socket.io/socket.io.js"></script>
</head>

<body>
    <div class="header">
        <button>Chat</button>
        <button>Users</button>
        <button onclick="logout()">Logout</button>
    </div>
    <div class="chat-container">
        <div class="message-and-input">
            <div class="messages" id="messages">
                <!-- 메시지들 출력될 곳 -->
            </div>
            <div class="message-input">
                <input type="text" id="message" placeholder="메시지를 입력해 주세요.">
                <button id="sendButton">Send</button>
            </div>
        </div>
        <div class="user-list">
            <h3 id="user-list-count">현재: 0명</h3>
            <ul id="users">
                <!-- 사용자 리스트 출력될 곳 -->
            </ul>
        </div>
    </div>

    <script>
        // 로그아웃 버튼 클릭 시
        function logout() {
            fetch('/user/sign-out', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(res => {
                if (res.ok) {
                    window.location.href = '/user/sign-in';
                } else {
                    alert('로그아웃 실패!');
                }
            }).catch(err => {
                console.error('Error:', err);
                alert('로그아웃 실패!');
            });
        }

        // 페이지 로딩 시
        document.addEventListener('DOMContentLoaded', () => {
            const socket = io('/chat');

            socket.on('connect', () => {
                console.log('Chat 네임스페이스 접속 완료');
            });

            socket.on('disconnect', () => {
                console.log('Chat 네임스페이스 접속 해제');
            });

            socket.on('existingMessages', (messages) => {
                const messagesContainer = document.getElementById('messages');
                messages.forEach(message => {
                    const messageElement = document.createElement('div');
                    messageElement.textContent = `${message.User.name}: ${message.message}`;
                    messagesContainer.appendChild(messageElement);
                });
            });

            socket.on('newMessage', (data) => {
                const messages = document.getElementById('messages');
                const messageElement = document.createElement('div');
                messageElement.textContent = `${data.user.name}: ${data.newMessage.message}`;
                messages.appendChild(messageElement);
            });

            socket.on('userJoined', (data) => {
                const messages = document.getElementById('messages');
                const messageElement = document.createElement('div');
                messageElement.textContent = `${data.user.name}님이 입장하셨습니다.`;
                messageElement.style.color = 'green';
                messages.appendChild(messageElement);
            });

            socket.on('updateUserList', (users) => {
                const userList = document.getElementById('users');
                const userCount = document.getElementById('user-list-count');

                userList.innerHTML = '';
                userCount.innerHTML = `현재: ${users.length}명`;
                users.forEach(user => {
                    const userElement = document.createElement('li');
                    userElement.textContent = user.name;
                    userList.appendChild(userElement);
                });
            });

            const sendButton = document.getElementById('sendButton');
            sendButton.addEventListener('click', () => {
                const messageInput = document.getElementById('message');
                const message = messageInput.value;
                socket.emit('sendMessage', { message, type: 'public' });
                messageInput.value = '';
            });
        });
    </script>
</body>

</html>